version: "3.9"

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-trailium}
      POSTGRES_USER: ${POSTGRES_USER:-trailium}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-trailium}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-trailium}"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: ../../apps/backend
    working_dir: /app
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: ${POSTGRES_DB:-trailium}
      POSTGRES_USER: ${POSTGRES_USER:-trailium}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-trailium}
      POSTGRES_PORT: "5432"
      DJANGO_SETTINGS_MODULE: core.settings
      PYTHONUNBUFFERED: "1"
      DEBUG: ${DEBUG:-False}
      SECRET_KEY: ${SECRET_KEY:-django-insecure-your-secret-key-here}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-localhost,127.0.0.1}
      CORS_ALLOW_ALL_ORIGINS: ${CORS_ALLOW_ALL_ORIGINS:-False}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  web:
    build:
      context: ../../apps/frontend
    working_dir: /app
    environment:
      VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://api:8000}
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "5173:5173"
    volumes:
      - ../../apps/frontend:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  db_data:

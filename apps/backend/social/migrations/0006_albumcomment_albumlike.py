# Generated by Django 5.2.5 on 2025-08-28 07:23

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("social", "0005_alter_comment_body_alter_post_body_alter_post_title_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AlbumComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "body",
                    models.TextField(
                        validators=[
                            django.core.validators.MinLengthValidator(
                                1, "Comment cannot be empty."
                            ),
                            django.core.validators.MaxLengthValidator(
                                1000, "Comment cannot exceed 1000 characters."
                            ),
                        ]
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "album",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="social.album",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="album_comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
                "indexes": [
                    models.Index(
                        fields=["album", "created_at"],
                        name="social_albu_album_i_287ad9_idx",
                    ),
                    models.Index(
                        fields=["user", "created_at"],
                        name="social_albu_user_id_19d199_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="AlbumLike",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "album",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes",
                        to="social.album",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="album_likes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["album", "created_at"],
                        name="social_albu_album_i_a38248_idx",
                    ),
                    models.Index(
                        fields=["user", "created_at"],
                        name="social_albu_user_id_a25d14_idx",
                    ),
                ],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("album", "user"), name="uniq_like_album_user"
                    )
                ],
            },
        ),
    ]
